# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use
# For example: application-dev.yml if you use the "dev" profile.
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# https://docs.spring.io/spring-boot/reference/features/profiles.html
# ===================================================================

server:
  servlet:
    session:
      cookie:
        # The session cookie that Spring Boot creates will have the HttpOnly attribute
        # Setting HttpOnly helps protect cookies from Cross-Site Scripting (XSS) attacks
        # Cookies will still be sent with each HTTP request (and can therefore be used for session authentication)
        # But Cookies cannot be accessed from the client side using JavaScript (e.g. via document.cookie)
        http-only: true
  port: 8080
  shutdown: graceful

spring:
  application:
    name: api-gateway
  profiles:
    active: "@profiles.active@"

  cloud:
    gateway:
      # Global CORS configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - "http://localhost:4200"
              - "http://localhost:8080"
            allowedMethods:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
            allowedHeaders:
              - Content-Type
              - Authorization
              - Accept
              - Origin
              - X-CSRF-Token
              - X-Requested-With
              - Access-Control-Allow-Origin
              - X-App-Version
              - X-Device-ID
            allowCredentials: true
            maxAge: 3600  # Cache preflight response in 1 hour

      # Route configurations
      routes:
        # User Service Route
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: user-service-cb
                fallbackUri: forward:/fallback/users
            - name: RequestRateLimiter
              args:
                redis-rate-limiter:
                  replenish-rate: 10
                  burst-capacity: 20
                  requested-tokens: 1

        # Product Service Route
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/products/**
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: product-service-cb
                fallbackUri: forward:/fallback/products
            - AddRequestHeader=X-Gateway-Name, API-Gateway

        # Order Service Route with authentication
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/orders/**
            - Header=Authorization, Bearer.*
          filters:
            - StripPrefix=2
            - name: CircuitBreaker
              args:
                name: order-service-cb
                fallbackUri: forward:/fallback/orders

      # Load balancer configuration
      loadbalancer:
        use404: true

      # Discovery configuration
      discovery:
        locator:
          enabled: true # Automatically create routes from service discovery
          lower-case-service-id: true
  lifecycle:
    timeout-per-shutdown-phase: 5s

resilience4j:
  circuitbreaker:
    instances:
      user-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10

      product-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 60
        waitDurationInOpenState: 10s

      order-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 15
        minimumNumberOfCalls: 8
        failureRateThreshold: 40
        waitDurationInOpenState: 8s

# Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,metrics
  endpoint:
    gateway:
      enabled: true
    health:
      show-details: always
